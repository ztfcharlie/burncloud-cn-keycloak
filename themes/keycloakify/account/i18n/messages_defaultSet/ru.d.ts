declare const messages: {
    doSave: string;
    doCancel: string;
    doLogOutAllSessions: string;
    doRemove: string;
    doAdd: string;
    doSignOut: string;
    doSignIn: string;
    update: string;
    remove: string;
    refreshPage: string;
    refresh: string;
    pageNotFound: string;
    invalidRoute: string;
    continue: string;
    doLogIn: string;
    accountManagementWelcomeMessage: string;
    loadingMessage: string;
    accountSecuritySidebarTitle: string;
    editAccountHtmlTitle: string;
    federatedIdentitiesHtmlTitle: string;
    accountLogHtmlTitle: string;
    changePasswordHtmlTitle: string;
    sessionsHtmlTitle: string;
    accountManagementTitle: string;
    authenticatorTitle: string;
    applicationsHtmlTitle: string;
    applicationsIntroMessage: string;
    accountSecurityIntroMessage: string;
    personalInfoSidebarTitle: string;
    personalInfoHtmlTitle: string;
    personalSubMessage: string;
    personalInfoIntroMessage: string;
    selectLocale: string;
    applicationsPageTitle: string;
    applicationsSubMessage: string;
    applicationName: string;
    applicationType: string;
    status: string;
    client: string;
    internalApp: string;
    thirdPartyApp: string;
    inUse: string;
    notInUse: string;
    signingIn: string;
    signingInSidebarTitle: string;
    signingInSubMessage: string;
    "password-display-name": string;
    credentialCreatedAt: string;
    "basic-authentication": string;
    "password-help-text": string;
    "two-factor": string;
    "otp-display-name": string;
    "otp-help-text": string;
    setUpNew: string;
    removeCred: string;
    stopUsingCred: string;
    successRemovedMessage: string;
    notSetUp: string;
    authenticatorMobileSetupTitle: string;
    totpStep1: string;
    totpStep2: string;
    totpStep3: string;
    totpManualStep2: string;
    totpManualStep3: string;
    totpStep3DeviceName: string;
    totpUnableToScan: string;
    totpScanBarcode: string;
    authenticatorCode: string;
    totpDeviceName: string;
    totpType: string;
    totpAlgorithm: string;
    totpDigits: string;
    totpInterval: string;
    totpCounter: string;
    deviceActivitySidebarTitle: string;
    deviceActivityHtmlTitle: string;
    signedInDevicesExplanation: string;
    signedInDevices: string;
    currentDevice: string;
    currentSession: string;
    lastAccessedOn: string;
    ipAddress: string;
    "device-activity": string;
    signOutWarning: string;
    signOutAllDevices: string;
    signOutAllDevicesWarning: string;
    signedOutSession: string;
    email: string;
    firstName: string;
    givenName: string;
    fullName: string;
    lastName: string;
    familyName: string;
    password: string;
    passwordConfirm: string;
    passwordNew: string;
    username: string;
    address: string;
    street: string;
    locality: string;
    region: string;
    postal_code: string;
    country: string;
    emailVerified: string;
    gssDelegationCredential: string;
    role_admin: string;
    "role_realm-admin": string;
    "role_create-realm": string;
    "role_view-realm": string;
    "role_view-users": string;
    "role_view-applications": string;
    "role_view-clients": string;
    "role_view-events": string;
    "role_view-identity-providers": string;
    "role_manage-realm": string;
    "role_manage-users": string;
    "role_manage-applications": string;
    "role_manage-identity-providers": string;
    "role_manage-clients": string;
    "role_manage-events": string;
    "role_view-profile": string;
    "role_manage-account": string;
    "role_read-token": string;
    "role_offline-access": string;
    role_uma_authorization: string;
    client_account: string;
    "client_security-admin-console": string;
    "client_admin-cli": string;
    "client_realm-management": string;
    client_broker: string;
    requiredFields: string;
    allFieldsRequired: string;
    backToApplication: string;
    backTo: string;
    date: string;
    event: string;
    ip: string;
    clients: string;
    details: string;
    started: string;
    lastAccess: string;
    expires: string;
    applications: string;
    account: string;
    federatedIdentity: string;
    authenticator: string;
    sessions: string;
    log: string;
    application: string;
    availablePermissions: string;
    grantedPermissions: string;
    grantedPersonalInfo: string;
    additionalGrants: string;
    action: string;
    inResource: string;
    fullAccess: string;
    offlineToken: string;
    revoke: string;
    missingUsernameMessage: string;
    missingFirstNameMessage: string;
    invalidEmailMessage: string;
    missingLastNameMessage: string;
    missingEmailMessage: string;
    missingPasswordMessage: string;
    notMatchPasswordMessage: string;
    missingTotpMessage: string;
    invalidPasswordExistingMessage: string;
    invalidPasswordConfirmMessage: string;
    invalidTotpMessage: string;
    usernameExistsMessage: string;
    emailExistsMessage: string;
    readOnlyUserMessage: string;
    readOnlyUsernameMessage: string;
    readOnlyPasswordMessage: string;
    successTotpMessage: string;
    successTotpRemovedMessage: string;
    successGrantRevokedMessage: string;
    accountUpdatedMessage: string;
    accountPasswordUpdatedMessage: string;
    missingIdentityProviderMessage: string;
    invalidFederatedIdentityActionMessage: string;
    identityProviderNotFoundMessage: string;
    federatedIdentityLinkNotActiveMessage: string;
    federatedIdentityRemovingLastProviderMessage: string;
    identityProviderRedirectErrorMessage: string;
    identityProviderRemovedMessage: string;
    identityProviderAlreadyLinkedMessage: string;
    staleCodeAccountMessage: string;
    consentDenied: string;
    accountDisabledMessage: string;
    accountTemporarilyDisabledMessage: string;
    invalidPasswordMinLengthMessage: string;
    invalidPasswordMinLowerCaseCharsMessage: string;
    invalidPasswordMinDigitsMessage: string;
    invalidPasswordMinUpperCaseCharsMessage: string;
    invalidPasswordMinSpecialCharsMessage: string;
    invalidPasswordNotUsernameMessage: string;
    invalidPasswordRegexPatternMessage: string;
    invalidPasswordHistoryMessage: string;
    invalidPasswordGenericMessage: string;
    newPasswordSameAsOld: string;
    passwordConfirmNotMatch: string;
};
export default messages;
