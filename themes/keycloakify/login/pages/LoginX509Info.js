import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { getKcClsx } from "../../login/lib/kcClsx";
export default function LoginX509Info(props) {
    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;
    const { kcClsx } = getKcClsx({
        doUseDefaultCss,
        classes
    });
    const { url, x509 } = kcContext;
    const { msg, msgStr } = i18n;
    return (_jsx(Template, Object.assign({ kcContext: kcContext, i18n: i18n, doUseDefaultCss: doUseDefaultCss, classes: classes, headerNode: msg("doLogIn") }, { children: _jsxs("form", Object.assign({ id: "kc-x509-login-info", className: kcClsx("kcFormClass"), action: url.loginAction, method: "post" }, { children: [_jsxs("div", Object.assign({ className: kcClsx("kcFormGroupClass") }, { children: [_jsx("div", Object.assign({ className: kcClsx("kcLabelWrapperClass") }, { children: _jsx("label", Object.assign({ htmlFor: "certificate_subjectDN", className: kcClsx("kcLabelClass") }, { children: msg("clientCertificate") })) })), x509.formData.subjectDN ? (_jsx("div", Object.assign({ className: kcClsx("kcLabelWrapperClass") }, { children: _jsx("label", Object.assign({ id: "certificate_subjectDN", className: kcClsx("kcLabelClass") }, { children: x509.formData.subjectDN })) }))) : (_jsx("div", Object.assign({ className: kcClsx("kcLabelWrapperClass") }, { children: _jsx("label", Object.assign({ id: "certificate_subjectDN", className: kcClsx("kcLabelClass") }, { children: msg("noCertificate") })) })))] })), _jsx("div", Object.assign({ className: kcClsx("kcFormGroupClass") }, { children: x509.formData.isUserEnabled && (_jsxs(_Fragment, { children: [_jsx("div", Object.assign({ className: kcClsx("kcLabelWrapperClass") }, { children: _jsx("label", Object.assign({ htmlFor: "username", className: kcClsx("kcLabelClass") }, { children: msg("doX509Login") })) })), _jsx("div", Object.assign({ className: kcClsx("kcLabelWrapperClass") }, { children: _jsx("label", Object.assign({ id: "username", className: kcClsx("kcLabelClass") }, { children: x509.formData.username })) }))] })) })), _jsxs("div", Object.assign({ className: kcClsx("kcFormGroupClass") }, { children: [_jsx("div", Object.assign({ id: "kc-form-options", className: kcClsx("kcFormOptionsClass") }, { children: _jsx("div", { className: kcClsx("kcFormOptionsWrapperClass") }) })), _jsx("div", Object.assign({ id: "kc-form-buttons", className: kcClsx("kcFormButtonsClass") }, { children: _jsxs("div", Object.assign({ className: kcClsx("kcFormButtonsWrapperClass") }, { children: [_jsx("input", { className: kcClsx("kcButtonClass", "kcButtonPrimaryClass", "kcButtonLargeClass"), name: "login", id: "kc-login", type: "submit", value: msgStr("doContinue") }), x509.formData.isUserEnabled && (_jsx("input", { className: kcClsx("kcButtonClass", "kcButtonDefaultClass", "kcButtonLargeClass"), name: "cancel", id: "kc-cancel", type: "submit", value: msgStr("doIgnore") }))] })) }))] }))] })) })));
}
//# sourceMappingURL=LoginX509Info.js.map