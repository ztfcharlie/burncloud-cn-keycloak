declare const messages: {
    emailVerifyTitle: string;
    emailForgotTitle: string;
    emailUpdateConfirmationSent: string;
    codeErrorTitle: string;
    acceptTerms: string;
    unknown: string;
    noAccount: string;
    firstName: string;
    givenName: string;
    fullName: string;
    lastName: string;
    address: string;
    region: string;
    postal_code: string;
    phoneNumberVerified: string;
    birthday: string;
    gender: string;
    gssDelegationCredential: string;
    addressScopeConsentText: string;
    offlineAccessScopeConsentText: string;
    phoneScopeConsentText: string;
    samlRoleListScopeConsentText: string;
    rolesScopeConsentText: string;
    organizationScopeConsentText: string;
    restartLoginTooltip: string;
    loginTotpStep1: string;
    loginTotpStep3DeviceName: string;
    loginTotpManualStep3: string;
    oauth2DeviceExpiredUserCodeMessage: string;
    oauth2DeviceVerificationFailedMessage: string;
    oauth2DeviceAuthorizationGrantDisabledMessage: string;
    oauth2DeviceVerificationCompleteMessage: string;
    oauth2DeviceVerificationFailedHeader: string;
    emailVerifyInstruction2: string;
    oauth2DeviceConsentDeniedMessage: string;
    unexpectedErrorHandlingRequestMessage: string;
    confirmOverrideIdpTitle: string;
    confirmLinkIdpTitle: string;
    nestedFirstBrokerFlowMessage: string;
    confirmLinkIdpReviewProfile: string;
    confirmOverrideIdpContinue: string;
    confirmLinkIdpContinue: string;
    updatePasswordMessage: string;
    linkIdpMessage: string;
    invalidPasswordMinLengthMessage: string;
    invalidPasswordMaxLengthMessage: string;
    successLogout: string;
    unknownLoginRequesterMessage: string;
    bearerOnlyMessage: string;
    standardFlowDisabledMessage: string;
    emailInstruction: string;
    "role_view-clients": string;
    invalidUserMessage: string;
    emailLinkIdp1: string;
    emailLinkIdp3: string;
    emailLinkIdp5: string;
    emailLinkIdp2: string;
    emailLinkIdp4: string;
    "role_view-realm": string;
    "role_view-identity-providers": string;
    emailInstructionUsername: string;
    pageExpiredMsg2: string;
    "role_manage-applications": string;
    "role_offline-access": string;
    accountTemporarilyDisabledMessage: string;
    "role_create-realm": string;
    "role_create-client": string;
    "role_view-users": string;
    "role_view-applications": string;
    "role_manage-clients": string;
    "role_view-events": string;
    client_account: string;
    "role_manage-realm": string;
    "role_manage-users": string;
    "role_manage-identity-providers": string;
    "role_manage-events": string;
    "role_read-token": string;
    "client_account-console": string;
    invalidRequesterMessage: string;
    registrationNotAllowedMessage: string;
    "role_view-profile": string;
    "role_manage-account-links": string;
    "role_manage-account": string;
    "client_security-admin-console": string;
    resetCredentialNotAllowedMessage: string;
    permissionNotApprovedMessage: string;
    expiredActionTokenNoSessionMessage: string;
    expiredActionTokenSessionExistsMessage: string;
    notMatchPasswordMessage: string;
    "error-invalid-blank": string;
    expiredActionMessage: string;
    missingTotpDeviceNameMessage: string;
    "error-empty": string;
    "error-invalid-value": string;
    "error-invalid-length": string;
    identityProviderInvalidSignatureMessage: string;
    identityProviderInvalidResponseMessage: string;
    identityProviderNotFoundMessage: string;
    credentialSetupRequired: string;
    staleCodeMessage: string;
    identityProviderNotUniqueMessage: string;
    realmSupportsNoCredentialsMessage: string;
    emailVerifiedMessage: string;
    emailVerifiedAlreadyMessage: string;
    staleEmailVerificationLink: string;
    identityProviderAlreadyLinkedMessage: string;
    confirmAccountLinking: string;
    confirmEmailAddressVerification: string;
    "requiredAction.CONFIGURE_RECOVERY_AUTHN_CODES": string;
    confirmExecutionOfActions: string;
    backToApplication: string;
    brokerLinkingSessionExpired: string;
    differentUserAuthenticated: string;
    "requiredAction.TERMS_AND_CONDITIONS": string;
    acrNotFulfilled: string;
    "requiredAction.CONFIGURE_TOTP": string;
    "requiredAction.webauthn-register-passwordless": string;
    clientCertificate: string;
    invalidTokenRequiredActions: string;
    internalServerError: string;
    noCertificate: string;
    pageNotFound: string;
    "openshift.scope.user_full": string;
    "console-verify-email": string;
    "saml.artifactResolutionServiceInvalidResponse": string;
    "openshift.scope.user_check-access": string;
    "openshift.scope.list-projects": string;
    "otp-help-text": string;
    "saml.post-form.js-disabled": string;
    "password-display-name": string;
    "otp-display-name": string;
    "otp-reset-description": string;
    "auth-recovery-authn-code-form-help-text": string;
    "recovery-code-config-warning-title": string;
    "auth-recovery-authn-code-form-display-name": string;
    "auth-recovery-code-info-message": string;
    "recovery-codes-error-invalid": string;
    "auth-recovery-code-prompt": string;
    "auth-recovery-code-header": string;
    "recovery-code-config-header": string;
    "recovery-codes-print": string;
    "recovery-codes-copy": string;
    "recovery-codes-download-file-description": string;
    "recovery-codes-label-default": string;
    "recovery-codes-download": string;
    "webauthn-display-name": string;
    "webauthn-help-text": string;
    "recovery-codes-copied": string;
    "recovery-codes-confirmation-message": string;
    "webauthn-passwordless-display-name": string;
    "webauthn-passwordless-help-text": string;
    "webauthn-unsupported-browser-text": string;
    "webauthn-doAuthenticate": string;
    "webauthn-registration-init-label": string;
    "webauthn-error-title": string;
    "webauthn-createdAt-label": string;
    "webauthn-registration-init-label-prompt": string;
    "webauthn-error-registration": string;
    "passkey-unsupported-browser-text": string;
    "webauthn-error-api-get": string;
    "passkey-doAuthenticate": string;
    "webauthn-error-different-user": string;
    "passkey-createdAt-label": string;
    "passkey-autofill-select": string;
    "idp-email-verification-help-text": string;
    "idp-username-password-form-display-name": string;
    "identity-provider-redirector": string;
    "identity-provider-login-label": string;
    "idp-username-password-form-help-text": string;
    "frontchannel-logout.message": string;
    logoutConfirmTitle: string;
    finalDeletionConfirmation: string;
    deleteAccountConfirm: string;
    loggingOutImmediately: string;
    userDeletedSuccessfully: string;
    logoutConfirmHeader: string;
    "frontchannel-logout.title": string;
    readOnlyUsernameMessage: string;
    doLogout: string;
    "error-invalid-multivalued-size": string;
    doLogIn: string;
    doRegister: string;
    doRegisterSecurityKey: string;
    doCancel: string;
    doSubmit: string;
    doNo: string;
    doContinue: string;
    doDecline: string;
    doForgotPassword: string;
    doClickHere: string;
    doImpersonate: string;
    doTryAnotherWay: string;
    doConfirmDelete: string;
    kerberosNotConfigured: string;
    kerberosNotSetUp: string;
    registerTitle: string;
    loginAccountTitle: string;
    loginTitle: string;
    loginTitleHtml: string;
    impersonateTitle: string;
    realmChoice: string;
    unknownUser: string;
    loginProfileTitle: string;
    reauthenticate: string;
    authenticateStrong: string;
    oauthGrantTitle: string;
    oauthGrantTitleHtml: string;
    oauthGrantInformation: string;
    oauthGrantReview: string;
    oauthGrantTos: string;
    oauthGrantPolicy: string;
    errorTitle: string;
    errorTitleHtml: string;
    updateEmailTitle: string;
    emailUpdateConfirmationSentTitle: string;
    emailUpdatedTitle: string;
    emailUpdated: string;
    updatePasswordTitle: string;
    codeSuccessTitle: string;
    displayUnsupported: string;
    browserRequired: string;
    browserContinue: string;
    browserContinuePrompt: string;
    browserContinueAnswer: string;
    usb: string;
    nfc: string;
    bluetooth: string;
    internal: string;
    termsTitle: string;
    termsText: string;
    termsPlainText: string;
    termsAcceptanceRequired: string;
    deleteCredentialTitle: string;
    deleteCredentialMessage: string;
    recaptchaFailed: string;
    recaptchaNotConfigured: string;
    consentDenied: string;
    username: string;
    usernameOrEmail: string;
    familyName: string;
    email: string;
    password: string;
    passwordConfirm: string;
    passwordNew: string;
    passwordNewConfirm: string;
    hidePassword: string;
    showPassword: string;
    rememberMe: string;
    authenticatorCode: string;
    street: string;
    locality: string;
    country: string;
    emailVerified: string;
    website: string;
    phoneNumber: string;
    zoneinfo: string;
    logoutOtherSessions: string;
    profileScopeConsentText: string;
    emailScopeConsentText: string;
    loginTotpIntro: string;
    loginTotpStep2: string;
    loginTotpStep3: string;
    loginTotpManualStep2: string;
    loginTotpUnableToScan: string;
    loginTotpScanBarcode: string;
    loginCredential: string;
    loginOtpOneTime: string;
    loginTotpType: string;
    loginTotpAlgorithm: string;
    loginTotpDigits: string;
    loginTotpInterval: string;
    loginTotpCounter: string;
    loginTotpDeviceName: string;
    "loginTotp.totp": string;
    "loginTotp.hotp": string;
    totpAppFreeOTPName: string;
    totpAppGoogleName: string;
    totpAppMicrosoftAuthenticatorName: string;
    loginChooseAuthenticator: string;
    oauthGrantRequest: string;
    inResource: string;
    oauth2DeviceVerificationTitle: string;
    verifyOAuth2DeviceUserCode: string;
    oauth2DeviceInvalidUserCodeMessage: string;
    oauth2DeviceVerificationCompleteHeader: string;
    emailVerifyInstruction1: string;
    emailVerifyInstruction3: string;
    emailLinkIdpTitle: string;
    backToLogin: string;
    copyCodeInstruction: string;
    pageExpiredTitle: string;
    pageExpiredMsg1: string;
    personalInfo: string;
    role_admin: string;
    "role_realm-admin": string;
    "client_admin-cli": string;
    "client_realm-management": string;
    requiredFields: string;
    client_broker: string;
    invalidUsernameMessage: string;
    invalidUsernameOrEmailMessage: string;
    invalidPasswordMessage: string;
    invalidEmailMessage: string;
    accountDisabledMessage: string;
    expiredCodeMessage: string;
    sessionLimitExceeded: string;
    identityProviderLogoutFailure: string;
    missingFirstNameMessage: string;
    missingLastNameMessage: string;
    missingEmailMessage: string;
    missingUsernameMessage: string;
    missingPasswordMessage: string;
    missingTotpMessage: string;
    "error-invalid-length-too-short": string;
    "error-invalid-length-too-long": string;
    "error-invalid-email": string;
    "error-invalid-number": string;
    "error-number-out-of-range": string;
    "error-number-out-of-range-too-big": string;
    "error-number-out-of-range-too-small": string;
    "error-pattern-no-match": string;
    "error-invalid-uri": string;
    "error-invalid-uri-scheme": string;
    "error-invalid-uri-fragment": string;
    "error-user-attribute-required": string;
    "error-invalid-date": string;
    "error-user-attribute-read-only": string;
    "error-username-invalid-character": string;
    "error-person-name-invalid-character": string;
    "error-reset-otp-missing-id": string;
    invalidPasswordExistingMessage: string;
    invalidPasswordBlacklistedMessage: string;
    invalidPasswordConfirmMessage: string;
    invalidTotpMessage: string;
    usernameExistsMessage: string;
    emailExistsMessage: string;
    federatedIdentityExistsMessage: string;
    federatedIdentityUnavailableMessage: string;
    federatedIdentityUnmatchedEssentialClaimMessage: string;
    federatedIdentityConfirmLinkMessage: string;
    federatedIdentityConfirmOverrideMessage: string;
    federatedIdentityConfirmReauthenticateMessage: string;
    configureTotpMessage: string;
    configureBackupCodesMessage: string;
    updateProfileMessage: string;
    updateEmailMessage: string;
    resetPasswordMessage: string;
    verifyEmailMessage: string;
    emailSentMessage: string;
    emailSendErrorMessage: string;
    accountUpdatedMessage: string;
    accountPasswordUpdatedMessage: string;
    delegationCompleteHeader: string;
    delegationCompleteMessage: string;
    delegationFailedHeader: string;
    delegationFailedMessage: string;
    noAccessMessage: string;
    invalidPasswordMinDigitsMessage: string;
    invalidPasswordMinLowerCaseCharsMessage: string;
    invalidPasswordMinUpperCaseCharsMessage: string;
    invalidPasswordMinSpecialCharsMessage: string;
    invalidPasswordNotUsernameMessage: string;
    invalidPasswordNotContainsUsernameMessage: string;
    invalidPasswordNotEmailMessage: string;
    invalidPasswordRegexPatternMessage: string;
    invalidPasswordHistoryMessage: string;
    invalidPasswordGenericMessage: string;
    failedToProcessResponseMessage: string;
    httpsRequiredMessage: string;
    realmNotEnabledMessage: string;
    invalidRequestMessage: string;
    failedLogout: string;
    loginRequesterNotEnabledMessage: string;
    implicitFlowDisabledMessage: string;
    invalidRedirectUriMessage: string;
    unsupportedNameIdFormatMessage: string;
    noRelayStateInResponseMessage: string;
    insufficientPermissionMessage: string;
    couldNotProceedWithAuthenticationRequestMessage: string;
    couldNotObtainTokenMessage: string;
    unexpectedErrorRetrievingTokenMessage: string;
    unexpectedErrorHandlingResponseMessage: string;
    identityProviderAuthenticationFailedMessage: string;
    couldNotSendAuthenticationRequestMessage: string;
    invalidAccessCodeMessage: string;
    sessionNotActiveMessage: string;
    invalidCodeMessage: string;
    cookieNotFoundMessage: string;
    insufficientLevelOfAuthentication: string;
    identityProviderUnexpectedErrorMessage: string;
    identityProviderMissingStateMessage: string;
    identityProviderMissingCodeOrErrorMessage: string;
    identityProviderLinkSuccess: string;
    missingParameterMessage: string;
    clientNotFoundMessage: string;
    clientDisabledMessage: string;
    invalidParameterMessage: string;
    alreadyLoggedIn: string;
    proceedWithAction: string;
    "requiredAction.UPDATE_PASSWORD": string;
    "requiredAction.UPDATE_PROFILE": string;
    "requiredAction.VERIFY_EMAIL": string;
    doX509Login: string;
    "console-username": string;
    "console-password": string;
    "console-otp": string;
    "console-new-password": string;
    "console-confirm-password": string;
    "console-update-password": string;
    "console-email-code": string;
    "console-accept-terms": string;
    "console-accept": string;
    "openshift.scope.user_info": string;
    "saml.post-form.title": string;
    "saml.post-form.message": string;
    "password-help-text": string;
    "auth-username-form-display-name": string;
    "auth-username-form-help-text": string;
    "auth-username-password-form-display-name": string;
    "auth-username-password-form-help-text": string;
    "recovery-code-config-warning-message": string;
    "recovery-codes-action-complete": string;
    "recovery-codes-action-cancel": string;
    "recovery-codes-download-file-header": string;
    "recovery-codes-download-file-date": string;
    "webauthn-login-title": string;
    "webauthn-registration-title": string;
    "webauthn-available-authenticators": string;
    "webauthn-error-auth-verification": string;
    "webauthn-error-register-verification": string;
    "webauthn-error-user-not-found": string;
    irreversibleAction: string;
    accountUnusable: string;
    "passkey-login-title": string;
    "passkey-available-authenticators": string;
    "idp-email-verification-display-name": string;
    deletingImplies: string;
    errasingData: string;
    "access-denied": string;
    "access-denied-when-idp-auth": string;
    doAccept: string;
    doTryAgain: string;
    errorDeletingAccount: string;
    kerberosNotConfiguredTitle: string;
    doBack: string;
    doYes: string;
    doIgnore: string;
    impersonateTitleHtml: string;
    loginTimeout: string;
    deletingAccountForbidden: string;
    bypassKerberosDetail: string;
    loginTotpTitle: string;
    loginIdpReviewProfileTitle: string;
    "organization.confirm-membership.title": string;
    "organization.confirm-membership": string;
    "organization.member.register.title": string;
    shouldBeEqual: string;
    shouldBeDifferent: string;
    shouldMatchPattern: string;
    mustBeAnInteger: string;
    notAValidOption: string;
    selectAnOption: string;
    remove: string;
    addValue: string;
    languages: string;
};
export default messages;
