version: "3.3"

services:
  burncloud-cn-keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: burncloud-cn-keycloak
    environment:
      # 数据库配置
      - KC_DB=postgres
      - KC_DB_URL=${KC_DB_URL}
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      
      # 管理员配置
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      
      # 生产配置
      - KC_HOSTNAME=${KC_HOSTNAME}
      - KC_PROXY=edge
      - KC_HTTP_ENABLED=true
      - KC_HEALTH_ENABLED=true
      - KC_METRICS_ENABLED=true
    volumes:
      - ./data/keycloak:/opt/keycloak/data
      - ./logs/keycloak:/opt/keycloak/logs
      - ./realms:/opt/keycloak/data/import
    command: start --optimized -Dkeycloak.import=/opt/keycloak/data/import/burncloud-realm.json
    depends_on:
      - burncloud-cn-keycloak-postgres
      - burncloud-cn-keycloak-redis
    restart: unless-stopped
    networks:
      burncloud-keycloak:
        ipv4_address: 172.22.0.10
      burncloud-proxy:

  burncloud-cn-keycloak-postgres:
    image: postgres:15-alpine
    container_name: burncloud-cn-keycloak-postgres
    environment:
      - POSTGRES_DB=keycloak_db
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./logs/postgres:/var/log
    restart: unless-stopped
    networks:
      - burncloud-keycloak

  burncloud-cn-keycloak-redis:
    image: redis:7-alpine
    container_name: burncloud-cn-keycloak-redis
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes --dir /data
    volumes:
      - ./data/redis:/data
      - ./logs/redis:/var/log
    restart: unless-stopped
    networks:
      - burncloud-keycloak

networks:
  burncloud-keycloak:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/16
  burncloud-proxy:
    external: true